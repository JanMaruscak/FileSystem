@page "/fetchdata"

@using FileSystem.Data
@using FileSystem.Models
@using MongoDB.Driver
@inject FileSystemService FileSystemService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (disks == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Name</th>
            <th>Size</th>
            <th>Created</th>
            <th>Last Edit</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var disk in disks)
        {
            <tr>
                <td>@disk.Name</td>
                <td>@disk.TotalSize</td>
                <td>@disk.Created</td>
                <td>@disk.LastEdit</td>
            </tr>
        }
        </tbody>
    </table>
    <input type="text" @bind="newDisk.Name"/>
    <button @onclick="Insert">Add disk!!!</button>
}

@code {
    private List<Disk> disks;
    private List<File> files;
    private List<Folder> folders;
    private Disk newDisk = new Disk(){Created = DateTime.Now, LastEdit = DateTime.Now,TotalSize = 0};

    protected override async Task OnInitializedAsync()
    {
        disks = await FileSystemService.GetDisksAsync();
    }

    public void Insert()
    {
        FileSystemService.Insert(newDisk);
    }
}